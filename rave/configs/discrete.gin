from __gin__ import dynamic_registration

include "configs/v2.gin"

import rave
from rave import core
from rave import blocks
from rave import balancer
from rave import discriminator

NUM_QUANTIZERS = 8
RATIOS = [4, 4, 2, 2]
LATENT_SIZE = 512
CODEBOOK_SIZE = 1024
DYNAMIC_MASKING = True

# ENCODER
blocks.ResidualVectorQuantize:
    dim = %LATENT_SIZE
    num_quantizers = %NUM_QUANTIZERS
    codebook_size = %CODEBOOK_SIZE
    dynamic_masking = %DYNAMIC_MASKING

discrete/blocks.Encoder.n_out = 1

blocks.DiscreteEncoder:
    encoder_cls = @discrete/blocks.Encoder
    rvq_cls = @blocks.ResidualVectorQuantize
    latent_size = %LATENT_SIZE
    num_quantizers = %NUM_QUANTIZERS

# DISTANCES
encodec/core.MultiScaleSTFT:
    num_mels = 64
    scales = [32, 64, 128, 256, 512, 1024, 2048]

core.EncodecAudioDistance:
    multiscale_stft = @encodec/core.MultiScaleSTFT
    log_epsilon = 1

feature_matching/core.mean_difference:
    relative = True

# BALANCER
balancer.Balancer:
    weights = {
        'fullband_spectral_distance': 2,
        'multiband_spectral_distance': 2,
        'regularization': .01,
        'adversarial': 10,
        'feature_matching': 10
    }
    scale_gradients = True

# RAVE
rave.RAVE:
    encoder = @blocks.DiscreteEncoder  
    phase_1_duration = -1
    warmup_quantize = -1
    update_discriminator_every = 4
    discriminator = @discriminator.MultiScaleSpectralDiscriminator
    gan_loss = @core.nonsaturating_gan
