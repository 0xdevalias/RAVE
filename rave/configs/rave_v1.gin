import rave
from rave import pqmf
from rave import core
from rave import blocks
from rave import discriminator

SAMPLING_RATE = 44100
CAPACITY = 64
N_BAND = 16
LATENT_SIZE = 128
RATIOS = [4, 4, 4, 2]
PHASE_1_DURATION = 1000000

# CORE CONFIGURATION
core.log_distance.epsilon = 1e-7

core.simple_audio_preprocess:
    crop = True
    trim_silence = True

core.multiscale_stft:
    scales = [2048, 1024, 512, 256, 128]
    overlap = .75

core.Loudness:
    sr = %SAMPLING_RATE
    block_size = 512
    n_fft = 2048

# CONVOLUTION CONFIGURATION
cc.Conv1d.bias = False
cc.ConvTranspose1d.bias = False
cc.get_padding.mode = "centered"

# PQMF
pqmf.CachedPQMF:
    attenuation = 100
    n_band = %N_BAND

# ENCODER
blocks.Encoder:
    data_size = %N_BAND
    capacity = %CAPACITY
    latent_size = %LATENT_SIZE
    ratios = %RATIOS
    sample_norm = False
    repeat_layers = 1

variational/blocks.Encoder.n_out = 2

blocks.VariationalEncoder:
    encoder = @variational/blocks.Encoder
    beta = .1

# DECODER
blocks.Generator:
    latent_size = %LATENT_SIZE
    capacity = %CAPACITY
    data_size = %N_BAND
    ratios = %RATIOS
    loud_stride = 1
    use_noise = True

blocks.ResidualStack:
    kernel_sizes = [3]
    dilations_list = [[1, 1], [3, 1], [5, 1]]

blocks.NoiseGenerator:
    ratios = [4, 4, 4]
    noise_bands = 5

# DISCRIMINATOR
discriminator.ConvNet:
    in_size = 1
    out_size = 1
    capacity = %CAPACITY
    n_layers = 4
    stride = 4

scales/discriminator.ConvNet:
    conv = @torch.nn.Conv1d
    kernel_size = 15

discriminator.MultiScaleDiscriminator:
    n_discriminators = 3
    convnet = @scales/discriminator.ConvNet

# MODEL ASSEMBLING
RAVE:
    latent_size = %LATENT_SIZE
    pqmf = @pqmf.CachedPQMF
    sampling_rate = %SAMPLING_RATE
    loudness = @core.Loudness
    encoder = @blocks.VariationalEncoder  
    decoder = @blocks.Generator
    discriminator = @discriminator.MultiScaleDiscriminator
    phase_1_duration = %PHASE_1_DURATION
    gan_loss = @core.hinge_gan
    feature_match = True
    valid_signal_crop = False