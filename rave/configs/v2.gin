from __gin__ import dynamic_registration

import rave
from rave import core
from rave import blocks
from rave import discriminator
from rave import balancer

import torch.nn as nn

include "configs/v1.gin"

core.AudioDistanceV1.log_epsilon = 1

fullband/core.MultiScaleSTFT:
    scales = [8192, 4096, 2048, 1024, 512]

fullband/core.AudioDistanceV1:
    multiscale_stft = @fullband/core.MultiScaleSTFT

discriminator/core.MultiScaleSTFT:
    magnitude = False

# ENCODER
blocks.Encoder.repeat_layers = 2

# GENERATOR
blocks.ResidualStack.kernel_sizes = [3, 5]

# DISCRIMINATOR
periods/discriminator.ConvNet:
    conv = @nn.Conv2d
    kernel_size = (5, 1)

spectral/discriminator.ConvNet:
    conv = @nn.Conv2d
    kernel_size = 5
    in_size = 2

discriminator.MultiScaleSpectralDiscriminator:
    multiscale_stft = @discriminator/core.MultiScaleSTFT
    n_discriminators = 5
    convnet = @spectral/discriminator.ConvNet

discriminator.MultiPeriodDiscriminator:
    periods = [2, 3, 5, 7, 11]
    convnet = @periods/discriminator.ConvNet

discriminator.CombineDiscriminators:
    discriminators = [
        @discriminator.MultiPeriodDiscriminator,
        @discriminator.MultiScaleDiscriminator
    ]

# BALANCER
balancer.Balancer:
    weights = {
        'fullband_spectral_distance': 2,
        'multiband_spectral_distance': 2,
        'regularization': .1,
        'adversarial': 2,
    }
    scale_gradients = True

# RAVE
rave.RAVE:
    discriminator = @discriminator.CombineDiscriminators
    valid_signal_crop = True
    num_skipped_features = 2
    audio_distance = @fullband/core.AudioDistanceV1
